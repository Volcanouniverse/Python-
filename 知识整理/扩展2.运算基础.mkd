# Python运算基础

## 一.表达式
- __表达式__ ：由运算符和操作数组成的式子（可以包含圆括号），用于计算并产生结果。

- __条件表达式__ ：用于判断是否满足某种条件，最简单的条件表达式可以是一个常量或变量；复杂的条件表达式可以使用逻辑运算符和比较运算符组合。最后评价结果为布尔值。
- __评价方法__ ：空为假，非空为真。
- __书写规则__ ：
     * 表达式从左到右在同一个基准上书写
     * 乘号不能省略
     * 圆括号可以用于改变计算顺序，必须成对出现，而且只能使用圆括号
     * 圆括号可以嵌套使用
- __表达式的返回值__：这个是可以是数字、字符串、布尔值、对象和None（空值）
## 二.运算符
### 2.1 关系运算符和测试运算符
- __关系运算符__ 用于比较两个对象的大小
- __测试运算符__ 用于测试两个对象的关系
- __关系表达式__ 由关系运算符和测试运算符组成的式子，用于判断两个对象的关系。

| 运算符 | 描述 | 
| --- | --- |
| `==` | 等于 |
| `!=` | 不等于 |
| `>` | 大于 |
| `<` | 小于 |
| `>=` | 大于等于 |
| `<=` | 小于等于 |
| `is` | 是同一个对象 |
| `is not` | 不是同一个对象 |
| `in` | 存在于 |
| `not in` | 不存在于 |

- 关系运算符的优先级相同，从左到右进行计算。
- 测试运算符的优先级高于关系运算符，从左到右进
- Python中的关系运算符可以连续使用，这样不仅可以减少代码量，也比较符合人的思维方式


### 2.2 逻辑运算符
#### 2.2.1 逻辑运算符
用于组合多个条件表达式，用于判断多个条件是否同时成立。

__1. 运算符说明__

| 运算符 | 含义 |说明|
| --- | --- | --- |
| `and` | 逻辑与 | 两个操作数均为 `True` 时，结果为 `True` |
| `or` | 逻辑或 | 两个操作数中至少有一个为 `True` 时，结果为 `True` |
| `not` | 逻辑非 | 操作数为 `True` 时，结果为 `False`，操作数为 `False` 时，结果为 `True` |

**2. 逻辑运算符的优先级：**`not` > `and` > `or`。

**3. 逻辑表达式**

Python中的任何表达式都可以评价为布尔逻辑值，都可以参与逻辑运算
```python
<表达式1><逻辑运算符><表达式2>
```

**4. 逻辑运算的“惰性”**

逻辑运算符`and`和`or`具有短路求值或惰性求值的特点
* 可能不会对所有表达式进行求值，而是只计算必须计算的表达式的值

*特别说明*

`C = A or B` ：

| A | C |
| --- | --- |
|`bool(A) == True`| A|
|`bool(B) == False`|  B|


`C = A and B` ：

| A | C |
| --- | --- |
|`bool(A) == False`| A|
|`bool(B) == True`|  B|


### 2.3 算数运算符
| 运算符 | 描述 |
| --- | --- |
| `+` | 加法 |
| `-` | 减法 |
| `*` | 乘法 |
| `/` | 除法 |
| `//` | 整除 |
| `%` | 取余 |
| `**` | 幂运算 |
- 算数运算符的优先级：`**` > `*`、`/`、`//`、`%` > `+`、`-`。

### 2.4 赋值运算符
**1.简单赋值和复合赋值**
| 运算符 | 描述 |
| --- | --- |
| `=` | 赋值 |
| `+=` | 加法赋值 |
| `-=` | 减法赋值 |
| `*=` | 乘法赋值 |
| `/=` | 除法赋值 |
| `//=` | 整除赋值 |
| `%=` | 取余赋值 |
| `**=` | 幂运算赋值 |

- 赋值运算符的优先级：`=` > `+=`、`-=`、`*=`、`/=`、`//=`、`%=`、`**=`。

**2. 链式赋值**

- 在一条语句中把一个对象赋值给多个变量，通常用来初始化多个变量
链式赋值语句用于为多个变量赋值同一个值
```python
变量 1 = 变量 2 = 表达式 
```
```python
变量 2 = 表达式
变量 1 = 变量 2
```
赋值时，右边表达式的值会先计算，然后赋值给左边的变量。

**3.序列解包赋值**

序列解包赋值用于将序列中的元素依次赋值给多个变量。
```python
变量 1, 变量 2, ..., 变量 n = 序列
```

### 2.5 位运算符（不考）


## 三.混合运算和赋值类型转换
### 3.1 混合运算
- 混合运算的优先级：
    - 括号优先：括号内的表达式先求值
    - 运算符优先级：算术运算符 > 比较运算符 > 逻辑运算符 > 赋值运算符。
    - 运算符结合性：多个相同的优先级的运算符根据从左到右求值，或者从右往左求值


#### 3.1.1 隐式转换
- `int` 、 `float` 和 `complex` 进行混合运算时，会自动将数据类型转换为相同类型，然后再进行运算。

| 类型 | 转换规则 |
| --- | --- |
| 整数和浮点数 | 整数转换为浮点数 | 
| 复数对象 | 都转换为复数 |
|`/`、`//`| 结果为浮点数|

- 注意：
    - 字符串和其他类型进行混合运算时，会报错。
    - `True` 和 `False` 进行混合运算时，会转换为 1 和 0 进行运算。

#### 3.1.2 显式转换
- 使用 `int()` 、 `float()` 和 `complex()` 函数进行类型转换。

## 四.内置数学运算函数

| 函数 | 描述 |
| --- | --- |
|⭐ `abs(x)` | 返回 x 的绝对值 |
|⭐ `pow(x, y)` | 返回 x 的 y 次幂 |
|⭐ `round(x, n)` | 返回 x 的四舍五入值，保留 n 位小数 |
| `min(x1, x2, ...)` | 返回 x1、x2、... 中的最小值 |
| `max(x1, x2,...)` | 返回 x1、x2、... 中的最大值 |
| `sum(iterable)` | 返回 iterable 中的元素之和 |
| `len(iterable)` | 返回 iterable 中的元素个数 |
|⭐`divmod(x, y)`| 返回 x 除以 y 的商和余数|

## 五.`math`模块
提供数学运算函数，如三角函数、对数函数等
### 5.1 `math` 的常量
| 常量 | 描述 |
| --- | --- |
| ⭐`math.pi` | 圆周率 |
| ⭐`math.e` | 自然对数的底数 |
| `math.inf` | 无穷大 |


### 5.2 `math` 的数值运算和表示
| 名称 | 功能 |
| --- | --- |
| ⭐`math.ceil(x)` | 返回>=x的最小整数 |
| ⭐`math.floor(x)` | 返回<=x的最大整数 |
| `math.trunc(x)` | 返回x的整数部分 |
| `math.fabs(x)` | 返回x的绝对值 |
| `math.fmod(x,y)` | 返回x%y的余数 |
| `math.factorial(x)` | 返回x的阶乘 |
| `math.gcd(*integers)` | 返回多个整数的最大公约数 |
| `math.lcm(*integers)` | 返回多个整数的最小公倍数 |
| `math.isclose(a,b)` | 判断浮点数a和b是否接近|
| `math.isinf(x)` | 判断x是否为无穷大 |


### 5.3 `math` 的幂和对数运算
| 名称 | 功能 |
| --- | --- |
| ⭐`math.pow(x,y)` | 返回x的y次幂 |
| ⭐`math.sqrt(x)` | 返回x的平方根 |
| `math.exp(x)` | 返回e的x次幂 |
| ⭐`math.log(x)` | 返回x的自然对数 |
| ⭐`math.log10(x)` | 返回x的以10为底的对数 |
| `math.log2(x)` | 返回x的以2为底的对数 |
| `math.log1p(x)` | 返回1+x的自然对数 |
| `math.expm1(x)` | 返回e的x次幂-1 |

### 5.4 `math` 的三角函数
| 名称 | 功能 |
| --- | --- |
| ⭐`math.sin(x)` | 返回x的正弦值 |
| ⭐`math.cos(x)` | 返回x的余弦值 |
| `math.tan(x)` | 返回x的正切值 |
| `math.asin(x)` | 返回x的反正弦值 |
| `math.acos(x)` | 返回x的反余弦值 |
| `math.atan(x)` | 返回x的反正切值 |


### 5.5 `math` 的双曲线函数
| 名称 | 功能 |
| --- | --- |
| `math.atanh(x)` | 返回x的反双曲正切值 |
| `math.sinh(x)` | 返回x的双曲正弦值 |
| `math.cosh(x)` | 返回x的双曲余弦值 |
| `math.tanh(x)` | 返回x的双曲正切值 |
| `math.asinh(x)` | 返回x的反双曲正弦值 |
| `math.acosh(x)` | 返回x的反双曲余弦值 |

### 5.6 `math` 的角度转换
| 名称 | 功能 |
| --- | --- |
| `math.degrees(x)` | 将弧度转换为角度 |
| `math.radians(x)` | 将角度转换为弧度 |